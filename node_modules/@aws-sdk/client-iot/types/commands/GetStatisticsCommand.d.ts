import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { GetStatisticsRequest, GetStatisticsResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type GetStatisticsCommandInput = GetStatisticsRequest;
export declare type GetStatisticsCommandOutput = GetStatisticsResponse & __MetadataBearer;
/**
 * <p>Returns the count, average, sum, minimum, maximum, sum of squares, variance,
 *       and standard deviation for the specified aggregated field. If the aggregation field is of type
 *       <code>String</code>, only the count statistic is returned.</p>
 */
export declare class GetStatisticsCommand extends $Command<GetStatisticsCommandInput, GetStatisticsCommandOutput, IoTClientResolvedConfig> {
    readonly input: GetStatisticsCommandInput;
    constructor(input: GetStatisticsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetStatisticsCommandInput, GetStatisticsCommandOutput>;
    private serialize;
    private deserialize;
}
