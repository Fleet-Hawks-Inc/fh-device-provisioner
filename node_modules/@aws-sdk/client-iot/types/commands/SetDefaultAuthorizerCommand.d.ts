import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { SetDefaultAuthorizerRequest, SetDefaultAuthorizerResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type SetDefaultAuthorizerCommandInput = SetDefaultAuthorizerRequest;
export declare type SetDefaultAuthorizerCommandOutput = SetDefaultAuthorizerResponse & __MetadataBearer;
/**
 * <p>Sets the default authorizer. This will be used if a websocket connection is made
 *          without specifying an authorizer.</p>
 */
export declare class SetDefaultAuthorizerCommand extends $Command<SetDefaultAuthorizerCommandInput, SetDefaultAuthorizerCommandOutput, IoTClientResolvedConfig> {
    readonly input: SetDefaultAuthorizerCommandInput;
    constructor(input: SetDefaultAuthorizerCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SetDefaultAuthorizerCommandInput, SetDefaultAuthorizerCommandOutput>;
    private serialize;
    private deserialize;
}
