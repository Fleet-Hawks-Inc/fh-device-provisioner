import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { ListPolicyVersionsRequest, ListPolicyVersionsResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ListPolicyVersionsCommandInput = ListPolicyVersionsRequest;
export declare type ListPolicyVersionsCommandOutput = ListPolicyVersionsResponse & __MetadataBearer;
/**
 * <p>Lists the versions of the specified policy and identifies the default
 *          version.</p>
 */
export declare class ListPolicyVersionsCommand extends $Command<ListPolicyVersionsCommandInput, ListPolicyVersionsCommandOutput, IoTClientResolvedConfig> {
    readonly input: ListPolicyVersionsCommandInput;
    constructor(input: ListPolicyVersionsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListPolicyVersionsCommandInput, ListPolicyVersionsCommandOutput>;
    private serialize;
    private deserialize;
}
