import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { StartThingRegistrationTaskRequest, StartThingRegistrationTaskResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type StartThingRegistrationTaskCommandInput = StartThingRegistrationTaskRequest;
export declare type StartThingRegistrationTaskCommandOutput = StartThingRegistrationTaskResponse & __MetadataBearer;
/**
 * <p>Creates a bulk thing provisioning task.</p>
 */
export declare class StartThingRegistrationTaskCommand extends $Command<StartThingRegistrationTaskCommandInput, StartThingRegistrationTaskCommandOutput, IoTClientResolvedConfig> {
    readonly input: StartThingRegistrationTaskCommandInput;
    constructor(input: StartThingRegistrationTaskCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartThingRegistrationTaskCommandInput, StartThingRegistrationTaskCommandOutput>;
    private serialize;
    private deserialize;
}
