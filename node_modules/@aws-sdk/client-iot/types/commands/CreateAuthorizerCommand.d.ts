import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CreateAuthorizerRequest, CreateAuthorizerResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateAuthorizerCommandInput = CreateAuthorizerRequest;
export declare type CreateAuthorizerCommandOutput = CreateAuthorizerResponse & __MetadataBearer;
/**
 * <p>Creates an authorizer.</p>
 */
export declare class CreateAuthorizerCommand extends $Command<CreateAuthorizerCommandInput, CreateAuthorizerCommandOutput, IoTClientResolvedConfig> {
    readonly input: CreateAuthorizerCommandInput;
    constructor(input: CreateAuthorizerCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateAuthorizerCommandInput, CreateAuthorizerCommandOutput>;
    private serialize;
    private deserialize;
}
