import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { ListMitigationActionsRequest, ListMitigationActionsResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ListMitigationActionsCommandInput = ListMitigationActionsRequest;
export declare type ListMitigationActionsCommandOutput = ListMitigationActionsResponse & __MetadataBearer;
/**
 * <p>Gets a list of all mitigation actions that match the specified filter criteria.</p>
 */
export declare class ListMitigationActionsCommand extends $Command<ListMitigationActionsCommandInput, ListMitigationActionsCommandOutput, IoTClientResolvedConfig> {
    readonly input: ListMitigationActionsCommandInput;
    constructor(input: ListMitigationActionsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListMitigationActionsCommandInput, ListMitigationActionsCommandOutput>;
    private serialize;
    private deserialize;
}
