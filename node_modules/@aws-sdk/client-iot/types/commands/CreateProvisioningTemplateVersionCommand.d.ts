import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CreateProvisioningTemplateVersionRequest, CreateProvisioningTemplateVersionResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateProvisioningTemplateVersionCommandInput = CreateProvisioningTemplateVersionRequest;
export declare type CreateProvisioningTemplateVersionCommandOutput = CreateProvisioningTemplateVersionResponse & __MetadataBearer;
/**
 * <p>Creates a new version of a fleet provisioning template.</p>
 */
export declare class CreateProvisioningTemplateVersionCommand extends $Command<CreateProvisioningTemplateVersionCommandInput, CreateProvisioningTemplateVersionCommandOutput, IoTClientResolvedConfig> {
    readonly input: CreateProvisioningTemplateVersionCommandInput;
    constructor(input: CreateProvisioningTemplateVersionCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateProvisioningTemplateVersionCommandInput, CreateProvisioningTemplateVersionCommandOutput>;
    private serialize;
    private deserialize;
}
