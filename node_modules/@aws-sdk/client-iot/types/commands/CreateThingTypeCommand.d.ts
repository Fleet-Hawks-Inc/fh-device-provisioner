import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CreateThingTypeRequest, CreateThingTypeResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateThingTypeCommandInput = CreateThingTypeRequest;
export declare type CreateThingTypeCommandOutput = CreateThingTypeResponse & __MetadataBearer;
/**
 * <p>Creates a new thing type.</p>
 */
export declare class CreateThingTypeCommand extends $Command<CreateThingTypeCommandInput, CreateThingTypeCommandOutput, IoTClientResolvedConfig> {
    readonly input: CreateThingTypeCommandInput;
    constructor(input: CreateThingTypeCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateThingTypeCommandInput, CreateThingTypeCommandOutput>;
    private serialize;
    private deserialize;
}
