import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CreateDomainConfigurationRequest, CreateDomainConfigurationResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateDomainConfigurationCommandInput = CreateDomainConfigurationRequest;
export declare type CreateDomainConfigurationCommandOutput = CreateDomainConfigurationResponse & __MetadataBearer;
/**
 * <p>Creates a domain configuration.</p>
 *          <note>
 *             <p>The domain configuration feature is in public preview and is subject to change.</p>
 *          </note>
 */
export declare class CreateDomainConfigurationCommand extends $Command<CreateDomainConfigurationCommandInput, CreateDomainConfigurationCommandOutput, IoTClientResolvedConfig> {
    readonly input: CreateDomainConfigurationCommandInput;
    constructor(input: CreateDomainConfigurationCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateDomainConfigurationCommandInput, CreateDomainConfigurationCommandOutput>;
    private serialize;
    private deserialize;
}
