import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { AttachPrincipalPolicyRequest } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type AttachPrincipalPolicyCommandInput = AttachPrincipalPolicyRequest;
export declare type AttachPrincipalPolicyCommandOutput = __MetadataBearer;
/**
 * @deprecated
 *
 * <p>Attaches the specified policy to the specified principal (certificate or other
 *          credential).</p>
 *          <p>
 *             <b>Note:</b> This API is deprecated. Please use <a>AttachPolicy</a> instead.</p>
 */
export declare class AttachPrincipalPolicyCommand extends $Command<AttachPrincipalPolicyCommandInput, AttachPrincipalPolicyCommandOutput, IoTClientResolvedConfig> {
    readonly input: AttachPrincipalPolicyCommandInput;
    constructor(input: AttachPrincipalPolicyCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AttachPrincipalPolicyCommandInput, AttachPrincipalPolicyCommandOutput>;
    private serialize;
    private deserialize;
}
