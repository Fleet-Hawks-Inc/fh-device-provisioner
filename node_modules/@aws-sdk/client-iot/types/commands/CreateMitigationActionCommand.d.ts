import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CreateMitigationActionRequest, CreateMitigationActionResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateMitigationActionCommandInput = CreateMitigationActionRequest;
export declare type CreateMitigationActionCommandOutput = CreateMitigationActionResponse & __MetadataBearer;
/**
 * <p>Defines an action that can be applied to audit findings by using StartAuditMitigationActionsTask. Only certain types of mitigation actions can be applied to specific check names. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/device-defender-mitigation-actions.html">Mitigation actions</a>. Each mitigation action can apply only one type of change.</p>
 */
export declare class CreateMitigationActionCommand extends $Command<CreateMitigationActionCommandInput, CreateMitigationActionCommandOutput, IoTClientResolvedConfig> {
    readonly input: CreateMitigationActionCommandInput;
    constructor(input: CreateMitigationActionCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateMitigationActionCommandInput, CreateMitigationActionCommandOutput>;
    private serialize;
    private deserialize;
}
