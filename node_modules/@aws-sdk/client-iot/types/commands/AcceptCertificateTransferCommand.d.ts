import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { AcceptCertificateTransferRequest } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type AcceptCertificateTransferCommandInput = AcceptCertificateTransferRequest;
export declare type AcceptCertificateTransferCommandOutput = __MetadataBearer;
/**
 * <p>Accepts a pending certificate transfer. The default state of the certificate is
 *          INACTIVE.</p>
 *          <p>To check for pending certificate transfers, call <a>ListCertificates</a>
 *          to enumerate your certificates.</p>
 */
export declare class AcceptCertificateTransferCommand extends $Command<AcceptCertificateTransferCommandInput, AcceptCertificateTransferCommandOutput, IoTClientResolvedConfig> {
    readonly input: AcceptCertificateTransferCommandInput;
    constructor(input: AcceptCertificateTransferCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AcceptCertificateTransferCommandInput, AcceptCertificateTransferCommandOutput>;
    private serialize;
    private deserialize;
}
