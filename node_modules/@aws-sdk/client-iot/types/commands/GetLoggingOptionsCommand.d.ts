import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { GetLoggingOptionsRequest, GetLoggingOptionsResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type GetLoggingOptionsCommandInput = GetLoggingOptionsRequest;
export declare type GetLoggingOptionsCommandOutput = GetLoggingOptionsResponse & __MetadataBearer;
/**
 * <p>Gets the logging options.</p>
 *          <p>NOTE: use of this command is not recommended. Use <code>GetV2LoggingOptions</code>
 *          instead.</p>
 */
export declare class GetLoggingOptionsCommand extends $Command<GetLoggingOptionsCommandInput, GetLoggingOptionsCommandOutput, IoTClientResolvedConfig> {
    readonly input: GetLoggingOptionsCommandInput;
    constructor(input: GetLoggingOptionsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetLoggingOptionsCommandInput, GetLoggingOptionsCommandOutput>;
    private serialize;
    private deserialize;
}
