import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { ListOutgoingCertificatesRequest, ListOutgoingCertificatesResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ListOutgoingCertificatesCommandInput = ListOutgoingCertificatesRequest;
export declare type ListOutgoingCertificatesCommandOutput = ListOutgoingCertificatesResponse & __MetadataBearer;
/**
 * <p>Lists certificates that are being transferred but not yet accepted.</p>
 */
export declare class ListOutgoingCertificatesCommand extends $Command<ListOutgoingCertificatesCommandInput, ListOutgoingCertificatesCommandOutput, IoTClientResolvedConfig> {
    readonly input: ListOutgoingCertificatesCommandInput;
    constructor(input: ListOutgoingCertificatesCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListOutgoingCertificatesCommandInput, ListOutgoingCertificatesCommandOutput>;
    private serialize;
    private deserialize;
}
