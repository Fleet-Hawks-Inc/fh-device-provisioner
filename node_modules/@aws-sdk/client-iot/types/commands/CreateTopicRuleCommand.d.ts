import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CreateTopicRuleRequest } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateTopicRuleCommandInput = CreateTopicRuleRequest;
export declare type CreateTopicRuleCommandOutput = __MetadataBearer;
/**
 * <p>Creates a rule. Creating rules is an administrator-level action. Any user who has
 *          permission to create rules will be able to access data processed by the rule.</p>
 */
export declare class CreateTopicRuleCommand extends $Command<CreateTopicRuleCommandInput, CreateTopicRuleCommandOutput, IoTClientResolvedConfig> {
    readonly input: CreateTopicRuleCommandInput;
    constructor(input: CreateTopicRuleCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateTopicRuleCommandInput, CreateTopicRuleCommandOutput>;
    private serialize;
    private deserialize;
}
