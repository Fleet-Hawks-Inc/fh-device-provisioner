import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { GetEffectivePoliciesRequest, GetEffectivePoliciesResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type GetEffectivePoliciesCommandInput = GetEffectivePoliciesRequest;
export declare type GetEffectivePoliciesCommandOutput = GetEffectivePoliciesResponse & __MetadataBearer;
/**
 * <p>Gets a list of the policies that have an effect on the authorization behavior of the
 *          specified device when it connects to the AWS IoT device gateway.</p>
 */
export declare class GetEffectivePoliciesCommand extends $Command<GetEffectivePoliciesCommandInput, GetEffectivePoliciesCommandOutput, IoTClientResolvedConfig> {
    readonly input: GetEffectivePoliciesCommandInput;
    constructor(input: GetEffectivePoliciesCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetEffectivePoliciesCommandInput, GetEffectivePoliciesCommandOutput>;
    private serialize;
    private deserialize;
}
