import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { StartAuditMitigationActionsTaskRequest, StartAuditMitigationActionsTaskResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type StartAuditMitigationActionsTaskCommandInput = StartAuditMitigationActionsTaskRequest;
export declare type StartAuditMitigationActionsTaskCommandOutput = StartAuditMitigationActionsTaskResponse & __MetadataBearer;
/**
 * <p>Starts a task that applies a set of mitigation actions to the specified target.</p>
 */
export declare class StartAuditMitigationActionsTaskCommand extends $Command<StartAuditMitigationActionsTaskCommandInput, StartAuditMitigationActionsTaskCommandOutput, IoTClientResolvedConfig> {
    readonly input: StartAuditMitigationActionsTaskCommandInput;
    constructor(input: StartAuditMitigationActionsTaskCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<StartAuditMitigationActionsTaskCommandInput, StartAuditMitigationActionsTaskCommandOutput>;
    private serialize;
    private deserialize;
}
