import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CreateDimensionRequest, CreateDimensionResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateDimensionCommandInput = CreateDimensionRequest;
export declare type CreateDimensionCommandOutput = CreateDimensionResponse & __MetadataBearer;
/**
 * <p>Create a dimension that you can use to limit the scope of a metric used in a security profile for AWS IoT Device Defender. For example, using a <code>TOPIC_FILTER</code> dimension, you can narrow down the scope of the metric only to MQTT topics whose name match the pattern specified in the dimension.</p>
 */
export declare class CreateDimensionCommand extends $Command<CreateDimensionCommandInput, CreateDimensionCommandOutput, IoTClientResolvedConfig> {
    readonly input: CreateDimensionCommandInput;
    constructor(input: CreateDimensionCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateDimensionCommandInput, CreateDimensionCommandOutput>;
    private serialize;
    private deserialize;
}
