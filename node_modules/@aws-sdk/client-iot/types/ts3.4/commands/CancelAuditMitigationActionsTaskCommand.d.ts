import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CancelAuditMitigationActionsTaskRequest, CancelAuditMitigationActionsTaskResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CancelAuditMitigationActionsTaskCommandInput = CancelAuditMitigationActionsTaskRequest;
export declare type CancelAuditMitigationActionsTaskCommandOutput = CancelAuditMitigationActionsTaskResponse & __MetadataBearer;
/**
 * <p>Cancels a mitigation action task that is in progress. If the task is not in progress, an InvalidRequestException occurs.</p>
 */
export declare class CancelAuditMitigationActionsTaskCommand extends $Command<CancelAuditMitigationActionsTaskCommandInput, CancelAuditMitigationActionsTaskCommandOutput, IoTClientResolvedConfig> {
    readonly input: CancelAuditMitigationActionsTaskCommandInput;
    constructor(input: CancelAuditMitigationActionsTaskCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelAuditMitigationActionsTaskCommandInput, CancelAuditMitigationActionsTaskCommandOutput>;
    private serialize;
    private deserialize;
}
