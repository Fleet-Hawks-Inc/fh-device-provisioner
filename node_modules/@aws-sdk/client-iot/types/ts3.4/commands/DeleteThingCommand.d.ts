import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { DeleteThingRequest, DeleteThingResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DeleteThingCommandInput = DeleteThingRequest;
export declare type DeleteThingCommandOutput = DeleteThingResponse & __MetadataBearer;
/**
 * <p>Deletes the specified thing. Returns successfully with no error if the deletion is
 * 			successful or you specify a thing that doesn't exist.</p>
 */
export declare class DeleteThingCommand extends $Command<DeleteThingCommandInput, DeleteThingCommandOutput, IoTClientResolvedConfig> {
    readonly input: DeleteThingCommandInput;
    constructor(input: DeleteThingCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteThingCommandInput, DeleteThingCommandOutput>;
    private serialize;
    private deserialize;
}
