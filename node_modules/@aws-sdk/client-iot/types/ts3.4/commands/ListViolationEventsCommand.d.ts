import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { ListViolationEventsRequest, ListViolationEventsResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ListViolationEventsCommandInput = ListViolationEventsRequest;
export declare type ListViolationEventsCommandOutput = ListViolationEventsResponse & __MetadataBearer;
/**
 * <p>Lists the Device Defender security profile violations discovered during the given time period.
 *       You can use filters to limit the results to those alerts issued for a particular security profile,
 *       behavior, or thing (device).</p>
 */
export declare class ListViolationEventsCommand extends $Command<ListViolationEventsCommandInput, ListViolationEventsCommandOutput, IoTClientResolvedConfig> {
    readonly input: ListViolationEventsCommandInput;
    constructor(input: ListViolationEventsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListViolationEventsCommandInput, ListViolationEventsCommandOutput>;
    private serialize;
    private deserialize;
}
