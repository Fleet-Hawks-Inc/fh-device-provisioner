import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CreateScheduledAuditRequest, CreateScheduledAuditResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateScheduledAuditCommandInput = CreateScheduledAuditRequest;
export declare type CreateScheduledAuditCommandOutput = CreateScheduledAuditResponse & __MetadataBearer;
/**
 * <p>Creates a scheduled audit that is run at a specified
 *           time interval.</p>
 */
export declare class CreateScheduledAuditCommand extends $Command<CreateScheduledAuditCommandInput, CreateScheduledAuditCommandOutput, IoTClientResolvedConfig> {
    readonly input: CreateScheduledAuditCommandInput;
    constructor(input: CreateScheduledAuditCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateScheduledAuditCommandInput, CreateScheduledAuditCommandOutput>;
    private serialize;
    private deserialize;
}
