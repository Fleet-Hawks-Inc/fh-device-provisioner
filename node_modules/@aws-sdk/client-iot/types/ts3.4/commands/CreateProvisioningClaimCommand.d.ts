import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CreateProvisioningClaimRequest, CreateProvisioningClaimResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateProvisioningClaimCommandInput = CreateProvisioningClaimRequest;
export declare type CreateProvisioningClaimCommandOutput = CreateProvisioningClaimResponse & __MetadataBearer;
/**
 * <p>Creates a provisioning claim.</p>
 */
export declare class CreateProvisioningClaimCommand extends $Command<CreateProvisioningClaimCommandInput, CreateProvisioningClaimCommandOutput, IoTClientResolvedConfig> {
    readonly input: CreateProvisioningClaimCommandInput;
    constructor(input: CreateProvisioningClaimCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateProvisioningClaimCommandInput, CreateProvisioningClaimCommandOutput>;
    private serialize;
    private deserialize;
}
