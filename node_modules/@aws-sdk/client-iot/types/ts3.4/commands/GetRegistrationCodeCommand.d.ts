import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { GetRegistrationCodeRequest, GetRegistrationCodeResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type GetRegistrationCodeCommandInput = GetRegistrationCodeRequest;
export declare type GetRegistrationCodeCommandOutput = GetRegistrationCodeResponse & __MetadataBearer;
/**
 * <p>Gets a registration code used to register a CA certificate with AWS IoT.</p>
 */
export declare class GetRegistrationCodeCommand extends $Command<GetRegistrationCodeCommandInput, GetRegistrationCodeCommandOutput, IoTClientResolvedConfig> {
    readonly input: GetRegistrationCodeCommandInput;
    constructor(input: GetRegistrationCodeCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetRegistrationCodeCommandInput, GetRegistrationCodeCommandOutput>;
    private serialize;
    private deserialize;
}
