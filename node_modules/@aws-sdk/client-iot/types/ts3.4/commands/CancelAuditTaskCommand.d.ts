import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CancelAuditTaskRequest, CancelAuditTaskResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CancelAuditTaskCommandInput = CancelAuditTaskRequest;
export declare type CancelAuditTaskCommandOutput = CancelAuditTaskResponse & __MetadataBearer;
/**
 * <p>Cancels an audit that is in progress. The audit can be either scheduled or on-demand.
 *           If the audit is not in progress, an "InvalidRequestException" occurs.</p>
 */
export declare class CancelAuditTaskCommand extends $Command<CancelAuditTaskCommandInput, CancelAuditTaskCommandOutput, IoTClientResolvedConfig> {
    readonly input: CancelAuditTaskCommandInput;
    constructor(input: CancelAuditTaskCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelAuditTaskCommandInput, CancelAuditTaskCommandOutput>;
    private serialize;
    private deserialize;
}
