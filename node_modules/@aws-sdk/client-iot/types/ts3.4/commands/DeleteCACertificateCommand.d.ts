import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { DeleteCACertificateRequest, DeleteCACertificateResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DeleteCACertificateCommandInput = DeleteCACertificateRequest;
export declare type DeleteCACertificateCommandOutput = DeleteCACertificateResponse & __MetadataBearer;
/**
 * <p>Deletes a registered CA certificate.</p>
 */
export declare class DeleteCACertificateCommand extends $Command<DeleteCACertificateCommandInput, DeleteCACertificateCommandOutput, IoTClientResolvedConfig> {
    readonly input: DeleteCACertificateCommandInput;
    constructor(input: DeleteCACertificateCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteCACertificateCommandInput, DeleteCACertificateCommandOutput>;
    private serialize;
    private deserialize;
}
