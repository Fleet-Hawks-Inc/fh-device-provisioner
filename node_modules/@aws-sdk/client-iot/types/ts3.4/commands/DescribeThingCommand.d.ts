import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { DescribeThingRequest, DescribeThingResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DescribeThingCommandInput = DescribeThingRequest;
export declare type DescribeThingCommandOutput = DescribeThingResponse & __MetadataBearer;
/**
 * <p>Gets information about the specified thing.</p>
 */
export declare class DescribeThingCommand extends $Command<DescribeThingCommandInput, DescribeThingCommandOutput, IoTClientResolvedConfig> {
    readonly input: DescribeThingCommandInput;
    constructor(input: DescribeThingCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeThingCommandInput, DescribeThingCommandOutput>;
    private serialize;
    private deserialize;
}
