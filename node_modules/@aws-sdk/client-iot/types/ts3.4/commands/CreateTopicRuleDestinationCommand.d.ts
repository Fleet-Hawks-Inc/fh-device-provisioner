import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { CreateTopicRuleDestinationRequest, CreateTopicRuleDestinationResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateTopicRuleDestinationCommandInput = CreateTopicRuleDestinationRequest;
export declare type CreateTopicRuleDestinationCommandOutput = CreateTopicRuleDestinationResponse & __MetadataBearer;
/**
 * <p>Creates a topic rule destination. The destination must be confirmed prior to use.</p>
 */
export declare class CreateTopicRuleDestinationCommand extends $Command<CreateTopicRuleDestinationCommandInput, CreateTopicRuleDestinationCommandOutput, IoTClientResolvedConfig> {
    readonly input: CreateTopicRuleDestinationCommandInput;
    constructor(input: CreateTopicRuleDestinationCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateTopicRuleDestinationCommandInput, CreateTopicRuleDestinationCommandOutput>;
    private serialize;
    private deserialize;
}
