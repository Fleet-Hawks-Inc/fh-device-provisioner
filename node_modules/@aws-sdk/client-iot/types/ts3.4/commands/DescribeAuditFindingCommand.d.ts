import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { DescribeAuditFindingRequest, DescribeAuditFindingResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DescribeAuditFindingCommandInput = DescribeAuditFindingRequest;
export declare type DescribeAuditFindingCommandOutput = DescribeAuditFindingResponse & __MetadataBearer;
/**
 * <p>Gets information about a single audit finding. Properties include the reason for noncompliance, the severity of the issue, and when the audit that returned the finding was started.</p>
 */
export declare class DescribeAuditFindingCommand extends $Command<DescribeAuditFindingCommandInput, DescribeAuditFindingCommandOutput, IoTClientResolvedConfig> {
    readonly input: DescribeAuditFindingCommandInput;
    constructor(input: DescribeAuditFindingCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAuditFindingCommandInput, DescribeAuditFindingCommandOutput>;
    private serialize;
    private deserialize;
}
