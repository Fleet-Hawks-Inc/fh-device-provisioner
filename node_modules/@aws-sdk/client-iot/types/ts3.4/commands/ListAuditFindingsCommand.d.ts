import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { ListAuditFindingsRequest, ListAuditFindingsResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ListAuditFindingsCommandInput = ListAuditFindingsRequest;
export declare type ListAuditFindingsCommandOutput = ListAuditFindingsResponse & __MetadataBearer;
/**
 * <p>Lists the findings (results) of a Device Defender audit or of the audits
 *         performed during a specified time period. (Findings are retained for 90 days.)</p>
 */
export declare class ListAuditFindingsCommand extends $Command<ListAuditFindingsCommandInput, ListAuditFindingsCommandOutput, IoTClientResolvedConfig> {
    readonly input: ListAuditFindingsCommandInput;
    constructor(input: ListAuditFindingsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAuditFindingsCommandInput, ListAuditFindingsCommandOutput>;
    private serialize;
    private deserialize;
}
