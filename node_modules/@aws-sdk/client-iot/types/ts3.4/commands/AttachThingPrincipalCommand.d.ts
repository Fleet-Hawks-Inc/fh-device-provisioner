import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { AttachThingPrincipalRequest, AttachThingPrincipalResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type AttachThingPrincipalCommandInput = AttachThingPrincipalRequest;
export declare type AttachThingPrincipalCommandOutput = AttachThingPrincipalResponse & __MetadataBearer;
/**
 * <p>Attaches the specified principal to the specified thing. A principal can be X.509
 * 			certificates, IAM users, groups, and roles, Amazon Cognito identities or federated
 * 			identities.</p>
 */
export declare class AttachThingPrincipalCommand extends $Command<AttachThingPrincipalCommandInput, AttachThingPrincipalCommandOutput, IoTClientResolvedConfig> {
    readonly input: AttachThingPrincipalCommandInput;
    constructor(input: AttachThingPrincipalCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<AttachThingPrincipalCommandInput, AttachThingPrincipalCommandOutput>;
    private serialize;
    private deserialize;
}
