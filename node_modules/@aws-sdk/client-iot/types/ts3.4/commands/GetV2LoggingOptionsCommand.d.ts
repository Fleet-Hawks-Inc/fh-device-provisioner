import { IoTClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTClient";
import { GetV2LoggingOptionsRequest, GetV2LoggingOptionsResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type GetV2LoggingOptionsCommandInput = GetV2LoggingOptionsRequest;
export declare type GetV2LoggingOptionsCommandOutput = GetV2LoggingOptionsResponse & __MetadataBearer;
/**
 * <p>Gets the fine grained logging options.</p>
 */
export declare class GetV2LoggingOptionsCommand extends $Command<GetV2LoggingOptionsCommandInput, GetV2LoggingOptionsCommandOutput, IoTClientResolvedConfig> {
    readonly input: GetV2LoggingOptionsCommandInput;
    constructor(input: GetV2LoggingOptionsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetV2LoggingOptionsCommandInput, GetV2LoggingOptionsCommandOutput>;
    private serialize;
    private deserialize;
}
