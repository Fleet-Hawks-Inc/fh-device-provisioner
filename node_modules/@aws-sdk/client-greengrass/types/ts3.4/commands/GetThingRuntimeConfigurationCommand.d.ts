import { GreengrassClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../GreengrassClient";
import { GetThingRuntimeConfigurationRequest, GetThingRuntimeConfigurationResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type GetThingRuntimeConfigurationCommandInput = GetThingRuntimeConfigurationRequest;
export declare type GetThingRuntimeConfigurationCommandOutput = GetThingRuntimeConfigurationResponse & __MetadataBearer;
/**
 * Get the runtime configuration of a thing.
 */
export declare class GetThingRuntimeConfigurationCommand extends $Command<GetThingRuntimeConfigurationCommandInput, GetThingRuntimeConfigurationCommandOutput, GreengrassClientResolvedConfig> {
    readonly input: GetThingRuntimeConfigurationCommandInput;
    constructor(input: GetThingRuntimeConfigurationCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: GreengrassClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetThingRuntimeConfigurationCommandInput, GetThingRuntimeConfigurationCommandOutput>;
    private serialize;
    private deserialize;
}
